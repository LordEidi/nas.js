#! /bin/sh
### BEGIN INIT INFO
# Provides:          nasjs
# Required-Start:    $nginx $syslog
# Required-Stop:     $nginx $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: nasjs initscript
# Description:       helps in starting / stopping the nasjs app
#
### END INIT INFO

# Author: lordeidi@swordlord.com
#

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
NODE_PATH=$NODE_PATH:/usr/lib/node_modules
DESC="nas.js interface"
NAME=nasjs
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
SOURCE_PATH=/var/www/nasjs
NODE_SCRIPT=server.js
LOGFILE=/var/log/$NAME.log

# Read configuration variable file if it is present
[ -r /etc/default/$NAME ] && . /etc/default/$NAME

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

getForeverId() {
    local pid=$(pidofproc -p $PIDFILE)
    exec forever list -p /var/run/forever | sed -e 's/\x1b\[[0-9; ]*m//g' | awk "\$4 == \"$pid]\" { gsub(/[\[\]]/, \$
}

do_start() {

        if [ "$id" = "" ]; then
        #
        exec forever start --sourceDir=$SOURCE_PATH --pidfile=$PIDFILE -al $LOGFILE -p /var/run/forever $NODE_SCRIPT

        else
                log_daemon_msg "$NAME is already running" "$NAME"
        fi

        # Return
        #   0 if daemon has been started
        #   1 if daemon was already running
        #   2 if daemon could not be started
        return 0
}

do_stop() {
        #
        exec forever stop --sourceDir=$SOURCE_PATH --pidfile=$PIDFILE $NODE_SCRIPT

        # Return
        #   0 if daemon has been stopped
        #   1 if daemon was already stopped
        #   2 if daemon could not be stopped
        #   other if a failure occurred
}

id=$(getForeverId)


case "$1" in
  start)
        [ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
        do_start
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  stop)
        [ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
        do_stop
        case "$?" in
                0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
                2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
        esac
        ;;
  status)
        status_of_proc "$DAEMON" "$NAME" && exit 0 || exit $?
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status}" >&2
        exit 3
        ;;
esac

: